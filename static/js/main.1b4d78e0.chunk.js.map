{"version":3,"sources":["components/Box/Box.jsx","components/Square/Square.jsx","components/Board/Board.jsx","components/StartForm/StartForm.jsx","components/Info/Info.jsx","App.js","index.js"],"names":["Box","className","this","props","children","Component","Square","handleClick","event","row","target","parentElement","rowIndex","col","cellIndex","value","onClick","Board","state","squareArray","Array","size","fill","map","handleSquareClick","gameStarted","winner","newSquareArray","isFirstPlayerTurn","setState","checkWinner","gameEnded","checkTie","initBoard","indexOf","board","firstValue","index","createTable","table","i","j","currentPlace","push","key","place","StartForm","error","a","preventDefault","firstPlayer","refs","secondPlayer","trim","players","handleStart","Form","Row","Col","Control","placeholder","ref","Button","variant","type","Info","undefined","playAgain","App","useState","setPlayers","setGameStarted","setWinner","setIsFirstPlayerTurn","currentBoard","React","createRef","status","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b4d78e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Box.css';\r\n\r\nclass Box extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Box;","import React, { Component } from 'react';\r\nimport './Square.css'\r\n\r\nclass Square extends Component {\r\n\r\n    handleClick = (event) => {\r\n        let row = event.target.parentElement.rowIndex;\r\n        let col = event.target.cellIndex;\r\n        this.props.handleClick(row, col);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <td className={this.props.value} onClick={this.handleClick}></td>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Square;","import React, { Component } from 'react';\r\nimport './Board.css'\r\nimport Square from '../Square/Square'\r\n\r\nclass Board extends Component {\r\n\r\n    state = {\r\n        squareArray: new Array(this.props.size).fill(null).map(() => new Array(this.props.size).fill(null))\r\n    }\r\n\r\n    handleSquareClick = (row, col) => {\r\n        if (!this.props.gameStarted || this.state.squareArray[row][col] != null || this.props.winner != null) {\r\n            return;\r\n        }\r\n\r\n        let newSquareArray = [...this.state.squareArray];\r\n        newSquareArray[row][col] = this.props.isFirstPlayerTurn ? 'xSign' : 'oSign';\r\n        this.setState({ squareArray: newSquareArray });\r\n\r\n        if (this.checkWinner()) {\r\n            this.props.gameEnded('win');\r\n        } else if (this.checkTie()) {\r\n            this.props.gameEnded('tie');\r\n        }\r\n\r\n        this.props.handleClick(row, col);\r\n    }\r\n\r\n    initBoard = () => {\r\n        this.setState({\r\n            squareArray: new Array(this.props.size).fill(null).map(() => new Array(this.props.size).fill(null))\r\n        });\r\n    }\r\n\r\n    checkTie = () => {\r\n        for (let arr of this.state.squareArray) {\r\n            if (arr.indexOf(null) !== -1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    checkWinner = () => {\r\n        let board = this.state.squareArray;\r\n\r\n        // Rows\r\n        for (let row = 0; row < this.props.size; row++) {\r\n            let firstValue = board[row][0];\r\n            for (let col = 1; col < this.props.size; col++) {\r\n                if (firstValue == null || board[row][col] !== firstValue) {\r\n                    break;\r\n                }\r\n                if (col === this.props.size - 1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Cols\r\n        for (let col = 0; col < this.props.size; col++) {\r\n            let firstValue = board[0][col];\r\n            for (let row = 1; row < this.props.size; row++) {\r\n                if (firstValue == null || board[row][col] !== firstValue) {\r\n                    break;\r\n                }\r\n                if (row === this.props.size - 1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // First slant\r\n        let firstValue = board[0][0];\r\n        for (let index = 0; index < this.props.size; index++) {\r\n            if (firstValue == null || board[index][index] !== firstValue) {\r\n                break;\r\n            }\r\n            if (index === this.props.size - 1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Second slant\r\n        firstValue = board[0][this.props.size - 1];\r\n        for (let index = this.props.size - 1; index >= 0; index--) {\r\n            if (firstValue == null || board[this.props.size - 1 - index][index] !== firstValue) {\r\n                break;\r\n            }\r\n            if (index === 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    createTable = () => {\r\n        let table = []\r\n\r\n        // Outer loop to create parent\r\n        for (let i = 0; i < this.props.size; i++) {\r\n            let children = []\r\n            //Inner loop to create children\r\n            for (let j = 0; j < this.props.size; j++) {\r\n                let currentPlace = j + (i * this.props.size);\r\n                children.push(<Square key={currentPlace} place={currentPlace} value={this.state.squareArray[i][j]} handleClick={this.handleSquareClick} />)\r\n            }\r\n            //Create the parent and add the children\r\n            table.push(<tr key={i}>{children}</tr>)\r\n        }\r\n        return table\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"squaresTable\">\r\n                <tbody>\r\n                    {this.createTable()}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport './StartForm.css';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\n\r\nclass StartForm extends Component {\r\n\r\n    state = {\r\n        error: null\r\n    }\r\n\r\n    handleClick = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await this.setState({\r\n            error: null\r\n        })\r\n\r\n        let firstPlayer = this.refs.firstPlayer.value;\r\n        let secondPlayer = this.refs.secondPlayer.value;\r\n\r\n        if (firstPlayer.trim() === '' || secondPlayer.trim() === '') {\r\n            await this.setState({\r\n                error: 'PUT A NAME YOU SON OF A BITCH!'\r\n            })\r\n        }\r\n\r\n        if (this.state.error != null) {\r\n            return;\r\n        }\r\n\r\n        let players = [this.refs.firstPlayer.value, this.refs.secondPlayer.value];\r\n        this.props.handleStart(players);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Control placeholder=\"First player\" ref=\"firstPlayer\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control placeholder=\"Second player\" ref=\"secondPlayer\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button variant=\"info\" type=\"submit\" className=\"play-button\" onClick={ this.handleClick }>Play!</Button>\r\n                </Row>\r\n                { this.state.error === null ? '' : <div className='err'>{ this.state.error }</div>}\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartForm;","import React, { Component } from 'react';\r\nimport './Info.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass Info extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"info\">\r\n                {this.props.winner !== null ?\r\n                    <>\r\n                        {this.props.winner === undefined ? \r\n                        <h1> It's a tie ...</h1>\r\n                        :\r\n                        <h1> {this.props.winner} is the Winner!</h1>}\r\n                        <Button variant=\"info\" type=\"submit\" className=\"play-button\" onClick={this.props.playAgain}>Again?</Button>\r\n                    </> :\r\n                    <span>It's <b>{this.props.players[this.props.isFirstPlayerTurn ? 0 : 1]}</b> Turn!</span>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;","import React, {\r\n  useState\r\n} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Box from './components/Box/Box'\r\nimport Board from './components/Board/Board'\r\nimport StartForm from './components/StartForm/StartForm'\r\nimport Info from './components/Info/Info'\r\n\r\nconst BOARD_SIZE = 3;\r\n\r\nfunction App() {\r\n\r\n  const [players, setPlayers] = useState([]);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [isFirstPlayerTurn, setIsFirstPlayerTurn] = useState(true);\r\n\r\n  const currentBoard = React.createRef();\r\n\r\n  const startGame = (players) => {\r\n    setPlayers(players);\r\n    setGameStarted(true);\r\n    setWinner(null);\r\n  }\r\n\r\n  const clickedSquare = () => {\r\n    setIsFirstPlayerTurn(!isFirstPlayerTurn);\r\n  }\r\n\r\n  const handleGameEnded = (status) => {\r\n    switch (status) {\r\n      case 'win':\r\n        let winner = players[isFirstPlayerTurn ? 0 : 1];\r\n        setWinner(winner);\r\n        break;\r\n\r\n      default: // Tie\r\n        setWinner(undefined);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const playAgain = () => {\r\n    setWinner(null);\r\n    currentBoard.current.initBoard();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Box >\r\n        <Board size={BOARD_SIZE} isFirstPlayerTurn={isFirstPlayerTurn} handleClick={clickedSquare} gameStarted={gameStarted} winner={winner} gameEnded={handleGameEnded} ref={currentBoard} />\r\n      </Box>\r\n\r\n      {gameStarted ? < Info players={players} isFirstPlayerTurn={isFirstPlayerTurn} winner={winner} playAgain={playAgain} /> :\r\n        <StartForm winner={winner} handleStart={startGame} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}